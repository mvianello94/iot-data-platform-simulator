services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.9.1
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    # healthcheck:
    #   test:
    #     ["CMD", "bash", "-c", "echo ruok | nc -w 2 localhost 2181 | grep imok"]
    #   interval: 10s
    #   timeout: 5s
    #   retries: 5

  kafka:
    image: confluentinc/cp-kafka:7.9.1
    depends_on:
      - zookeeper
      # zookeeper:
      #   condition: service_healthy
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    healthcheck:
      test: ["CMD", "bash", "-c", "nc -z kafka 9092"]
      interval: 10s
      timeout: 5s
      retries: 10

  schema-registry:
    image: confluentinc/cp-schema-registry:7.9.1
    depends_on:
      kafka:
        condition: service_healthy
    ports:
      - "8081:8081"
    environment:
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: PLAINTEXT://kafka:9092
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081/subjects"]
      interval: 10s
      timeout: 5s
      retries: 5

  minio:
    image: minio/minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    command: server /data --console-address ":9001"
    volumes:
      - minio-data:/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 10s
      timeout: 5s
      retries: 5

  minio-init:
    image: minio/mc
    depends_on:
      minio:
        condition: service_healthy
    entrypoint: >
      /bin/sh -c "
        sleep 5;
        mc alias set local http://minio:9000 minioadmin minioadmin;
        mc mb local/iot-data || true;
        mc policy set public local/iot-data;
        exit 0;
      "

  devices-simulator:
    build:
      context: ./devices-simulator
    depends_on:
      kafka:
        condition: service_healthy
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092

  spark-stream-processor:
    build:
      context: ./spark-stream-processor
    depends_on:
      kafka:
        condition: service_healthy
      minio:
        condition: service_healthy
    environment:
      - PYSPARK_PYTHON=python3

  superset:
    image: apache/superset:latest
    ports:
      - "8088:8088"
    environment:
      SUPERSET_ENV: development
      SUPERSET_LOAD_EXAMPLES: "no"
      SUPERSET_SECRET_KEY: "your_super_secret_key_here"
    volumes:
      - superset_home:/app/superset_home
    depends_on:
      - minio
      - spark-stream-processor
    command: >
      /bin/sh -c "
      superset db upgrade &&
      superset init &&
      superset fab create-admin --username admin --firstname Admin --lastname Admin --email admin@example.com --password admin123! &&
      superset run -p 8088 --host 0.0.0.0 --with-threads --reload --debugger
      "

volumes:
  minio-data:
  superset_home:
